<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hexo]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2018-01-12T01:31:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[John Doe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[git常用命令]]></title>
    <link href="http://yoursite.com/2018/01/12/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/01/12/git常用命令/</id>
    <published>2018-01-12T01:31:26.000Z</published>
    <updated>2018-01-12T01:31:59.000Z</updated>
    <content type="html"><![CDATA[<p>克隆分支：git clone url</p>
<p>创建仓库：git init</p>
<p>查看分支：git branch</p>
<p>查看远程分支：git branch -r<br><a id="more"></a></p>
<p>克隆分支：git clone url</p>
<p>创建仓库：git init</p>
<p>查看分支：git branch</p>
<p>查看远程分支：git branch -r</p>
<p>查看本地和远程的关联：git branch -vv</p>
<p>创建分支：git branch <name></name></p>
<p>切换分支：git checkout <name></name></p>
<p>创建+切换分支：git checkout -b <name></name></p>
<p>合并某分支到当前分支：git merge <name></name></p>
<p>删除本地分支：git branch -d <name></name></p>
<p>强行删除本地分支：git branch -D <name></name></p>
<p>增加到git管理：git add file 或 git add –all（表示所有）</p>
<p>提交到本地仓库：git commit -m”xxx”</p>
<p>从远程仓库拉更新并合并：git pull [origin <name>]<br>从远程仓库拉更新（若有冲突则不合并）：git fetch [origin <name>]<br>多用fetch 少用pull</name></name></p>
<p>拉取所有分支（若有冲突则不合并）：git fetch –all</p>
<p>同步到远程仓库：git push [origin <name>]</name></p>
<p>同步本地仓库到远程仓库并关联远程仓库：git push -u [origin <name>]</name></p>
<p>关联远程仓库：git branch –set-upstream-to=origin/<name></name></p>
<p>查看日志：git log –graph</p>
<p>查看状态：git status</p>
<p>查看对应的克隆地址：git remove -v</p>
<p>保存当前工作内容：git stash 对应的恢复并删除：git stash pop</p>
<p>撤消（删除）：git reset [–mixed|–hard|–soft]</p>
<p>回滚：git revert</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>克隆分支：git clone url</p>
<p>创建仓库：git init</p>
<p>查看分支：git branch</p>
<p>查看远程分支：git branch -r<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/07/22/git%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E4%B9%8B%E5%88%86%E6%94%AF/"/>
    <id>http://yoursite.com/2017/07/22/git版本管理之分支/</id>
    <published>2017-07-22T01:59:48.000Z</published>
    <updated>2017-07-22T01:59:48.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git获取远程分支]]></title>
    <link href="http://yoursite.com/2017/06/06/Git%E8%8E%B7%E5%8F%96%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/"/>
    <id>http://yoursite.com/2017/06/06/Git获取远程分支/</id>
    <published>2017-06-06T02:01:25.000Z</published>
    <updated>2017-06-06T02:02:18.000Z</updated>
    <content type="html"><![CDATA[<p>通过git clone获取的远端git库，只包含了远端git库的当前工作分支。如果想获取其它分支信息，需要使用”git branch  –r” 来查看，如果需要将远程的其它分支代码也获取过来，可以使用命令” git checkout -b 本地分支名 远程分支名”，其中，远程分支名为git branch –r所列出的分支名， 一般是诸如“origin/分支名”的样子。如果本地分支名已经存在， 则不需要“-b”参数。<br>&lt;–more –&gt;</p>
<p>通过git clone获取的远端git库，只包含了远端git库的当前工作分支。如果想获取其它分支信息，需要使用”git branch  –r” 来查看，如果需要将远程的其它分支代码也获取过来，可以使用命令” git checkout -b 本地分支名 远程分支名”，其中，远程分支名为git branch –r所列出的分支名， 一般是诸如“origin/分支名”的样子。如果本地分支名已经存在， 则不需要“-b”参数。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>通过git clone获取的远端git库，只包含了远端git库的当前工作分支。如果想获取其它分支信息，需要使用”git branch  –r” 来查看，如果需要将远程的其它分支代码也获取过来，可以使用命令” git checkout -b 本地分支名 远程分支名”，其中，远]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb常用命令之逻辑运算符]]></title>
    <link href="http://yoursite.com/2017/03/28/mongodb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8B%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2017/03/28/mongodb常用命令之逻辑运算符/</id>
    <published>2017-03-28T05:56:51.000Z</published>
    <updated>2017-03-29T01:31:16.000Z</updated>
    <content type="html"><![CDATA[<p>在mongodb的查询中，除了简单的find()方法查询外，我们还可以使用逻辑运算符来做一些复杂的查询<br><a id="more"></a></p>
<h1 id="24on__u4F7F_u7528_u903B_u8F91_24or_u8FDE_u63A5_u67E5_u8BE2_u5B50_u53E5_u8FD4_u56DE_u4E0E_u4EFB_u4E00_u5B50_u53E5_u7684_u6761_u4EF6_u76F8_u5339_u914D_u7684_u6240_u6709_u6587_u6863_u3002"><a href="#24on__u4F7F_u7528_u903B_u8F91_24or_u8FDE_u63A5_u67E5_u8BE2_u5B50_u53E5_u8FD4_u56DE_u4E0E_u4EFB_u4E00_u5B50_u53E5_u7684_u6761_u4EF6_u76F8_u5339_u914D_u7684_u6240_u6709_u6587_u6863_u3002" class="headerlink" title="$on 使用逻辑$or连接查询子句返回与任一子句的条件相匹配的所有文档。"></a>$on 使用逻辑$or连接查询子句返回与任一子句的条件相匹配的所有文档。</h1><p>语法</p>
<blockquote>
<p>{ $or: [ { expression1 }, { expression2 }, … , { expressionN } ] }</p>
</blockquote>
<p>如下</p>
<blockquote>
<p>db.query.find({ $or:[ { “qty”:20 },{ “item.name”:”ab” } ] })</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; $or:[ &#123; <span class="string">"qty"</span>:<span class="number">20</span> &#125;,&#123; <span class="string">"item.name"</span>:<span class="string">"ab"</span> &#125; ] &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24and__u4F7F_u7528_u903B_u8F91AND_u8FDE_u63A5_u67E5_u8BE2_u5B50_u53E5_u8FD4_u56DE_u4E0E_u4E24_u4E2A_u5B50_u53E5_u7684_u6761_u4EF6_u76F8_u5339_u914D_u7684_u6240_u6709_u6587_u6863_u3002"><a href="#24and__u4F7F_u7528_u903B_u8F91AND_u8FDE_u63A5_u67E5_u8BE2_u5B50_u53E5_u8FD4_u56DE_u4E0E_u4E24_u4E2A_u5B50_u53E5_u7684_u6761_u4EF6_u76F8_u5339_u914D_u7684_u6240_u6709_u6587_u6863_u3002" class="headerlink" title="$and 使用逻辑AND连接查询子句返回与两个子句的条件相匹配的所有文档。"></a>$and 使用逻辑AND连接查询子句返回与两个子句的条件相匹配的所有文档。</h1><p>语法</p>
<blockquote>
<p>{ $and: [ { expression1 }, { expression2 }, … , { expressionN } ] }</p>
</blockquote>
<p>如下</p>
<blockquote>
<p>db.query.find({ $and:[ { “qty”:20 },{ “item.name”:”cd” } ] })</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; $and:[ &#123;qty:<span class="number">20</span>&#125;,&#123;<span class="string">'item.name'</span>:<span class="string">'cd'</span>&#125; ] &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24not_u53CD_u8F6C_u67E5_u8BE2_u8868_u8FBE_u5F0F_u7684_u6548_u679C_uFF0C_u5E76_u8FD4_u56DE_u4E0E_u67E5_u8BE2_u8868_u8FBE_u5F0F_u4E0D_u5339_u914D_u7684_u6587_u6863_u8BED_u6CD5"><a href="#24not_u53CD_u8F6C_u67E5_u8BE2_u8868_u8FBE_u5F0F_u7684_u6548_u679C_uFF0C_u5E76_u8FD4_u56DE_u4E0E_u67E5_u8BE2_u8868_u8FBE_u5F0F_u4E0D_u5339_u914D_u7684_u6587_u6863_u8BED_u6CD5" class="headerlink" title="$not反转查询表达式的效果，并返回与查询表达式不匹配的文档语法"></a>$not反转查询表达式的效果，并返回与查询表达式不匹配的文档语法</h1><blockquote>
<p>{ field: { $not: { operator-expression } } }<br>//operator-expression 表示一个查询表达式语法</p>
</blockquote>
<p>如下,查询qty字段不小于20的数据</p>
<blockquote>
<p>db.query.find({ qty:{$not:{$lt:20}} })</p>
</blockquote>
<p>等同与查询qty字段大于等于20的数据</p>
<blockquote>
<p>db.query.find( { qty:{$gte:20} } )</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find( &#123; qty:&#123;$gte:<span class="number">20</span>&#125; &#125; )</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br><span class="line">&gt; db.query.find(&#123; qty:&#123;$not:&#123;$lt:<span class="number">20</span>&#125;&#125; &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24nor_u53CD_u8F6C_u67E5_u8BE2_u8868_u8FBE_u5F0F_u7684_u6548_u679C_uFF0C_u5E76_u8FD4_u56DE_u4E0E_u67E5_u8BE2_u8868_u8FBE_u5F0F_u4E0D_u5339_u914D_u7684_u6587_u6863_u8BED_u6CD5"><a href="#24nor_u53CD_u8F6C_u67E5_u8BE2_u8868_u8FBE_u5F0F_u7684_u6548_u679C_uFF0C_u5E76_u8FD4_u56DE_u4E0E_u67E5_u8BE2_u8868_u8FBE_u5F0F_u4E0D_u5339_u914D_u7684_u6587_u6863_u8BED_u6CD5" class="headerlink" title="$nor反转查询表达式的效果，并返回与查询表达式不匹配的文档语法"></a>$nor反转查询表达式的效果，并返回与查询表达式不匹配的文档语法</h1><blockquote>
<p>{ $nor: [ { expression1 }, { expression2 }, …  { expressionN } ] }<br>//expression1,expressionN 表示一个查询表达式语法</p>
</blockquote>
<p>如下,查询qty字段等于20同时itme.name不等于’ab’的数据</p>
<blockquote>
<p>db.query.find({ $nor:[{qty:20},{‘item.name’:’ab’}] })</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; $nor:[&#123;qty:<span class="number">20</span>&#125;,&#123;<span class="string">'item.name'</span>:<span class="string">'ab'</span>&#125;] &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在mongodb的查询中，除了简单的find()方法查询外，我们还可以使用逻辑运算符来做一些复杂的查询<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb常用命令之查询运算符]]></title>
    <link href="http://yoursite.com/2017/03/15/mongodb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8B%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2017/03/15/mongodb常用命令之查询运算符/</id>
    <published>2017-03-15T05:55:14.000Z</published>
    <updated>2017-03-22T07:12:03.000Z</updated>
    <content type="html"><![CDATA[<p>在mongodb的查询中，除了简单的find()方法查询外，我们还可以使用运算来做一些复杂的查询<br><a id="more"></a></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.insert([</span><br><span class="line">  &#123; item: &#123; name: <span class="string">"ab"</span>, code: <span class="string">"123"</span> &#125;, qty: <span class="number">15</span>, tags: [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;,</span><br><span class="line">  &#123; item: &#123; name: <span class="string">"cd"</span>, code: <span class="string">"123"</span> &#125;, qty: <span class="number">20</span>, tags: [ <span class="string">"B"</span> ] &#125;,</span><br><span class="line">  &#123; item: &#123; name: <span class="string">"ij"</span>, code: <span class="string">"456"</span> &#125;, qty: <span class="number">25</span>, tags: [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;,</span><br><span class="line">  &#123; item: &#123; name: <span class="string">"xy"</span>, code: <span class="string">"456"</span> &#125;, qty: <span class="number">30</span>, tags: [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;,</span><br><span class="line">  &#123; item: &#123; name: <span class="string">"mn"</span>, code: <span class="string">"000"</span> &#125;, qty: <span class="number">20</span>, tags: [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br><span class="line">])</span><br><span class="line">BulkWriteResult(&#123;</span><br><span class="line">	<span class="string">"writeErrors"</span> : [ ],</span><br><span class="line">	<span class="string">"writeConcernErrors"</span> : [ ],</span><br><span class="line">	<span class="string">"nInserted"</span> : <span class="number">5</span>,</span><br><span class="line">	<span class="string">"nUpserted"</span> : <span class="number">0</span>,</span><br><span class="line">	<span class="string">"nMatched"</span> : <span class="number">0</span>,</span><br><span class="line">	<span class="string">"nModified"</span> : <span class="number">0</span>,</span><br><span class="line">	<span class="string">"nRemoved"</span> : <span class="number">0</span>,</span><br><span class="line">	<span class="string">"upserted"</span> : [ ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>我们先在query文档里插入一些测试数据</p>
<h1 id="24eq__u5339_u914D_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24eq__u5339_u914D_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$eq 匹配等于指定值的值"></a>$eq 匹配等于指定值的值</h1><p>语法</p>
<blockquote>
<p>db.collection.find({ field: { $eq: value } })</p>
</blockquote>
<h2 id="u67E5_u8BE2_u6307_u5B9A_u7684_u503C"><a href="#u67E5_u8BE2_u6307_u5B9A_u7684_u503C" class="headerlink" title="查询指定的值"></a>查询指定的值</h2><p>以下要查询query collection文档里，所有qty=20的数据</p>
<blockquote>
<p>db.query.find({“qty”:{$eq:20}})</p>
</blockquote>
<p>还可以这样写</p>
<blockquote>
<p>db.query.find({“qty”:20})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; <span class="string">"qty"</span>:&#123; $eq:<span class="number">20</span> &#125; &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h2 id="u67E5_u8BE2_u5D4C_u5165_u5F0F_u6587_u6863_u4E2D_u7684_u5B57_u6BB5_u7B49_u4E8E_u503C"><a href="#u67E5_u8BE2_u5D4C_u5165_u5F0F_u6587_u6863_u4E2D_u7684_u5B57_u6BB5_u7B49_u4E8E_u503C" class="headerlink" title="查询嵌入式文档中的字段等于值"></a>查询嵌入式文档中的字段等于值</h2><p>以下要查询query collection文档里,查询item字段里的name字段等于ab的数据</p>
<blockquote>
<p>db.query.find({ “item.name”:{$eq:’ab’} })</p>
</blockquote>
<p>还可以这样写</p>
<blockquote>
<p>db.query.find({ “item.name”:”ab” })</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">"item.name"</span>:<span class="string">"ab"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&gt; db.query.find(&#123;<span class="string">"item.name"</span>:&#123;$eq:<span class="string">'ab'</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h2 id="u67E5_u8BE2_u6570_u7EC4_u4E2D_u7684_u6307_u5B9A_u503C"><a href="#u67E5_u8BE2_u6570_u7EC4_u4E2D_u7684_u6307_u5B9A_u503C" class="headerlink" title="查询数组中的指定值"></a>查询数组中的指定值</h2><p>以下要查询query collection文档里,tags数组中的包含元素B的数据</p>
<blockquote>
<p>db.query.find({ ‘tags’:{ $eq:’B’ } })</p>
</blockquote>
<p>还可以这样写</p>
<blockquote>
<p>db.query.find({ ‘tags’:’B’ })</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; <span class="string">'tags'</span>:&#123;$eq:<span class="string">'B'</span>&#125; &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h2 id="u67E5_u8BE2_u6307_u5B9A_u7684_u6570_u7EC4_u503C"><a href="#u67E5_u8BE2_u6307_u5B9A_u7684_u6570_u7EC4_u503C" class="headerlink" title="查询指定的数组值"></a>查询指定的数组值</h2><p>以下要查询query collection文档里,选择其中tags数组等于指定数组的所有文档，或者tags数组包含等于数组[“A”，“B”]的元素。</p>
<blockquote>
<p>db.query.find({‘tags’:{ $eq:[‘A’,’B’] } })<br>还可以这样写<br>db.query.find({‘tags’:[‘A’,’B’]})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'tags'</span>:&#123; $eq:[<span class="string">'A'</span>,<span class="string">'B'</span>] &#125; &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24gt__u5339_u914D_u5927_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24gt__u5339_u914D_u5927_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$gt 匹配大于指定值的值"></a>$gt 匹配大于指定值的值</h1><p>$gt 选择文档中字段(field)大于(&gt;)指定的值(value)<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $gt: value } })</p>
</blockquote>
<p>以下要查询query collection文档里,当字段qty的值大于20的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$gt:20}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$gt:<span class="number">20</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24gte__u5339_u914D_u5927_u4E8E_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24gte__u5339_u914D_u5927_u4E8E_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$gte 匹配大于等于指定值的值"></a>$gte 匹配大于等于指定值的值</h1><p>$gt 选择文档中字段(field)大于等于(&gt;=)指定的值(value)<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $gte: value } })</p>
</blockquote>
<p>以下要查询query collection文档里,当字段qty的值大于等于20的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$gte:20}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$gte:<span class="number">20</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24lt__u5339_u914D_u5C0F_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24lt__u5339_u914D_u5C0F_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$lt 匹配小于指定值的值"></a>$lt 匹配小于指定值的值</h1><p>$lt 选择文档中字段(field)小于(&lt;)指定的值(value)<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $lt: value } })</p>
</blockquote>
<p>以下要查询query collection文档里,当字段qty的值小于20的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$lt:20}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$lt:<span class="number">20</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24lte__u5339_u914D_u5C0F_u4E8E_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24lte__u5339_u914D_u5C0F_u4E8E_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$lte 匹配小于等于指定值的值"></a>$lte 匹配小于等于指定值的值</h1><p>$lte 选择文档中字段(field)小于等于(&lt;=)指定的值(value)<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $lte: value } })</p>
</blockquote>
<p>以下要查询query collection文档里,当字段qty的值小于等于20的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$lte:20}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$lte:<span class="number">20</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24ne__u5339_u914D_u4E0D_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C"><a href="#24ne__u5339_u914D_u4E0D_u7B49_u4E8E_u6307_u5B9A_u503C_u7684_u503C" class="headerlink" title="$ne 匹配不等于指定值的值"></a>$ne 匹配不等于指定值的值</h1><p>$ne 选择文档中字段(field)不等于(!=)指定的值(value)<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $ne: value } })</p>
</blockquote>
<p>以下要查询query collection文档里,当字段qty的值不等于20的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$ne:20}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123; <span class="string">"qty"</span>:&#123;$ne:<span class="number">20</span>&#125; &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24in__u5339_u914D_u6570_u7EC4_u4E2D_u6307_u5B9A_u7684_u4EFB_u4F55_u503C_u3002"><a href="#24in__u5339_u914D_u6570_u7EC4_u4E2D_u6307_u5B9A_u7684_u4EFB_u4F55_u503C_u3002" class="headerlink" title="$in 匹配数组中指定的任何值。"></a>$in 匹配数组中指定的任何值。</h1><p>$in 选择文档中字段(field),匹配field查询条件中任何值<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $in: [value,value1] } })</p>
</blockquote>
<p>以下要查询query collection文档里,匹配字段qty的值5或者15的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$in:[5,15]}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$<span class="keyword">in</span>:[<span class="number">5</span>,<span class="number">15</span>]&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<p>当field字段为数组时，查询field字段时，匹配查询条件中的任何值</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'tags'</span>:&#123;$<span class="keyword">in</span>:[<span class="string">'A'</span>,<span class="string">'C'</span>]&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfd"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ab"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">15</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<h1 id="24nin__u4E0D_u5339_u914D_u6570_u7EC4_u4E2D_u6307_u5B9A_u7684_u4EFB_u4F55_u503C_u3002"><a href="#24nin__u4E0D_u5339_u914D_u6570_u7EC4_u4E2D_u6307_u5B9A_u7684_u4EFB_u4F55_u503C_u3002" class="headerlink" title="$nin 不匹配数组中指定的任何值。"></a>$nin 不匹配数组中指定的任何值。</h1><p>$nin 选择文档中字段(field),不匹配field查询条件中任何值<br>语法</p>
<blockquote>
<p>db.collection.find({ field: { $nin: [value,value1] } })</p>
</blockquote>
<p>以下要查询query collection文档里,不匹配字段qty的值5或者15的数据</p>
<blockquote>
<p>db.query.find({‘qty’:{$nin:[5,15]}})</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.query.find(&#123;<span class="string">'qty'</span>:&#123;$nin:[<span class="number">5</span>,<span class="number">15</span>]&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cfe"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"cd"</span>, <span class="string">"code"</span> : <span class="string">"123"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242cff"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"ij"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"tags"</span> : [ <span class="string">"A"</span>, <span class="string">"B"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d00"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"xy"</span>, <span class="string">"code"</span> : <span class="string">"456"</span> &#125;, <span class="string">"qty"</span> : <span class="number">30</span>, <span class="string">"tags"</span> : [ <span class="string">"B"</span>, <span class="string">"A"</span> ] &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58c8e0bc8991cd1ba3242d01"</span>), <span class="string">"item"</span> : &#123; <span class="string">"name"</span> : <span class="string">"mn"</span>, <span class="string">"code"</span> : <span class="string">"000"</span> &#125;, <span class="string">"qty"</span> : <span class="number">20</span>, <span class="string">"tags"</span> : [ [ <span class="string">"A"</span>, <span class="string">"B"</span> ], <span class="string">"C"</span> ] &#125;</span><br></pre></td></tr></table></figure>
<p>好啦，查询运算符就讲到这里，大部分代码与文字来自官方文档(<a href="https://docs.mongodb.com/manual/reference/operator/query-comparison/" target="_blank" rel="external">https://docs.mongodb.com/manual/reference/operator/query-comparison/</a>)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在mongodb的查询中，除了简单的find()方法查询外，我们还可以使用运算来做一些复杂的查询<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[44个Javascript变态题解析]]></title>
    <link href="http://yoursite.com/2017/02/28/44%E4%B8%AAJavascript%E5%8F%98%E6%80%81%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2017/02/28/44个Javascript变态题解析/</id>
    <published>2017-02-28T08:07:21.000Z</published>
    <updated>2017-03-03T07:55:56.000Z</updated>
    <content type="html"><![CDATA[<p>原题来自: <a href="http://javascript-puzzlers.herokuapp.com/" target="_blank" rel="external">http://javascript-puzzlers.herokuapp.com/</a></p>
<p>读者可以先去做一下感受感受. 当初笔者的成绩是 21/44…</p>
<p>当初笔者做这套题的时候不仅怀疑智商, 连人生都开始怀疑了….</p>
<p>不过, 对于基础知识的理解是深入编程的前提. 让我们一起来看看这些变态题到底变态不变态吧!</p>
<a id="more"></a>
<h1 id="u7B2C1_u9898"><a href="#u7B2C1_u9898" class="headerlink" title="第1题"></a>第1题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].map(<span class="built_in">parseInt</span>)</span><br></pre></td></tr></table></figure>
<p>首先, map接受两个参数, 一个回调函数 callback, 一个回调函数的this值</p>
<p>其中回调函数接受三个参数 currentValue, index, arrary;</p>
<p>而题目中, map只传入了回调函数–parseInt.</p>
<p>其次, parseInt 只接受两个两个参数 string, radix(基数).</p>
<div class="tip"><br>可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。<br><br>如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。<br><br>如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。<br></div>

<p>所以本题即问</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">3</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>首先后两者参数不合法.</p>
<p>所以答案是 [1, NaN, NaN]</p>
<h1 id="u7B2C2_u9898"><a href="#u7B2C2_u9898" class="headerlink" title="第2题"></a>第2题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="keyword">typeof</span> <span class="literal">null</span>, <span class="literal">null</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span>]</span><br></pre></td></tr></table></figure>
<p>typeof 返回一个表示类型的字符串.</p>
<p>instanceof 运算符用来检测 constructor.prototype 是否存在于参数 object 的原型链上.</p>
<p>这个题可以直接看链接… 因为 typeof null === ‘object’ 自语言之初就是这样….</p>
<table>
<thead>
<tr>
<th>type</th>
<th>result</th>
</tr>
</thead>
<tbody>
<tr>
<td>Undefined</td>
<td>‘undefined’</td>
</tr>
<tr>
<td>null</td>
<td>‘object’</td>
</tr>
<tr>
<td>boolean</td>
<td>‘boolean’</td>
</tr>
<tr>
<td>Number</td>
<td>‘number’</td>
</tr>
<tr>
<td>String</td>
<td>‘string’</td>
</tr>
<tr>
<td>Symbol</td>
<td>‘symbol’</td>
</tr>
<tr>
<td>Function</td>
<td>‘function’</td>
</tr>
<tr>
<td>Object</td>
<td>‘object’</td>
</tr>
</tbody>
</table>
<p>答案就是[object,false]</p>
<h1 id="u7B2C3_u9898"><a href="#u7B2C3_u9898" class="headerlink" title="第3题"></a>第3题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>].reduce(<span class="built_in">Math</span>.pow),[].reduce(<span class="built_in">Math</span>.pow)]</span><br></pre></td></tr></table></figure>
<p>arr.reduce(callback[, initialValue])</p>
<p>reduce接受两个参数, 一个回调, 一个初始值.</p>
<p>回调函数接受四个参数 previousValue, currentValue, currentIndex, array</p>
<p>需要注意的是 If the array is empty and no initialValue was provided, TypeError would be thrown.</p>
<p>所以第二个表达式会报异常. 第一个表达式等价于 Math.pow(3, 2) =&gt; 9; Math.pow(9, 1) =&gt;9</p>
<p>答案是 [9,erroe]</p>
<h1 id="u7B2C4_u9898"><a href="#u7B2C4_u9898" class="headerlink" title="第4题"></a>第4题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> val  = <span class="string">'st'</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Value is '</span>+(val===<span class="string">'st'</span>) ? <span class="string">"Something"</span>:<span class="string">"Nothing"</span>)</span><br></pre></td></tr></table></figure>
<p>简而言之+号优先级大?号</p>
<p>本题主要讲的是符号的优先级，<br>()括号大玩+号大于?号</p>
<p>所以原题等价于 ‘Value is true’ ? ‘Somthing’ : ‘Nonthing’ 而不是 ‘Value is’ + (true ? ‘Something’ : ‘Nonthing’)</p>
<p>答案 ‘Something’</p>
<p>如果把上题改一下,答案会是什么呢</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> val = <span class="string">'st'</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Value is "</span>+ (val===<span class="string">'st'</span> ? <span class="string">"Something"</span>:<span class="string">"Nothing"</span>) )</span><br></pre></td></tr></table></figure>
<h1 id="u7B2C5_u9898"><a href="#u7B2C5_u9898" class="headerlink" title="第5题"></a>第5题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'World'</span></span><br><span class="line"><span class="comment">// 原题是没有前页的加号</span></span><br><span class="line"><span class="comment">// 不加的话在chrome 控制台会报错</span></span><br><span class="line">+(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> name === <span class="string">'undefined'</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">'Jack'</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Goodbye "</span>+name)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Hello "</span>+name)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>在 JavaScript中， functions 和 variables 会被提升。变量提升是JavaScript将声明移至作用域 scope (全局域或者当前函数作用域) 顶部的行为。</p>
<p>这个题目相当于</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'World'</span></span><br><span class="line">+(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> name === <span class="string">'undefined'</span>)&#123;</span><br><span class="line">    name = <span class="string">'Jack'</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Goodbye "</span>+name)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Hello "</span>+name)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>所以答案是 ‘Goodbye Jack’</p>
<h1 id="u7B2C6_u9898"><a href="#u7B2C6_u9898" class="headerlink" title="第6题"></a>第6题</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> END = <span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">53</span>)</span><br><span class="line"><span class="keyword">var</span> START = END - <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=START;i&lt;=END;i++)&#123;</span><br><span class="line">  count++</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(count)</span><br></pre></td></tr></table></figure>
<p>在 JS 里, Math.pow(2, 53) == 9007199254740992 是可以表示的最大值. 最大值加一还是最大值. 所以循环不会停.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>原题来自: <a href="http://javascript-puzzlers.herokuapp.com/">http://javascript-puzzlers.herokuapp.com/</a></p>
<p>读者可以先去做一下感受感受. 当初笔者的成绩是 21/44…</p>
<p>当初笔者做这套题的时候不仅怀疑智商, 连人生都开始怀疑了….</p>
<p>不过, 对于基础知识的理解是深入编程的前提. 让我们一起来看看这些变态题到底变态不变态吧!</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb常用命令之增查改删]]></title>
    <link href="http://yoursite.com/2017/02/16/mongodb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8B%E5%A2%9E%E6%9F%A5%E6%94%B9%E5%88%A0/"/>
    <id>http://yoursite.com/2017/02/16/mongodb常用命令之增查改删/</id>
    <published>2017-02-16T02:03:51.000Z</published>
    <updated>2017-11-17T02:23:01.000Z</updated>
    <content type="html"><![CDATA[<p>今天这篇文章主要介绍下集合(collenction)的增查改删</p>
<p>切换到对应的数据库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; use sb </span><br><span class="line">switched to db sb</span><br></pre></td></tr></table></figure>
<p>接下来对对sb数据库里的集合进行操作</p>
<!-- mroe -->
<h1 id="u589E"><a href="#u589E" class="headerlink" title="增"></a>增</h1><p>db.collection.insertOne()将返回一个包含新插入的文档_id字段值的文档</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.inventory.insertOne(&#123; item: <span class="string">"canvas"</span>,qty: <span class="number">100</span>,tags:[<span class="string">"cotton"</span>],size:&#123;h:<span class="number">28</span>,w:<span class="number">35.5</span>,uom:<span class="string">"cm"</span>&#125;&#125;)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"insertedId"</span> : ObjectId(<span class="string">"58a50ac3ac45d884d168ae1e"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>db.collection.insertMany() 可以将多个文档插入到集合中。传递数组给方法。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.inventory.insertMany([</span><br><span class="line">  &#123; item: <span class="string">"journal"</span>, qty: <span class="number">25</span>, tags: [<span class="string">"blank"</span>, <span class="string">"red"</span>], size: &#123; h: <span class="number">14</span>, w: <span class="number">21</span>, uom: <span class="string">"cm"</span> &#125; &#125;,</span><br><span class="line">  &#123; item: <span class="string">"mat"</span>, qty: <span class="number">85</span>, tags: [<span class="string">"gray"</span>], size: &#123; h: <span class="number">27.9</span>, w: <span class="number">35.5</span>, uom: <span class="string">"cm"</span> &#125; &#125;,</span><br><span class="line">  &#123; item: <span class="string">"mousepad"</span>, qty: <span class="number">25</span>, tags: [<span class="string">"gel"</span>, <span class="string">"blue"</span>], size: &#123; h: <span class="number">19</span>, w: <span class="number">22.85</span>, uom: <span class="string">"cm"</span> &#125; &#125;</span><br><span class="line">])</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"insertedIds"</span> : [</span><br><span class="line">    ObjectId(<span class="string">"58a50de1ac45d884d168ae1f"</span>),</span><br><span class="line">    ObjectId(<span class="string">"58a50de1ac45d884d168ae20"</span>),</span><br><span class="line">    ObjectId(<span class="string">"58a50de1ac45d884d168ae21"</span>)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上示例将三个新文档插入inventory集合中。 由于文档没有指定_id字段，MongoDB将为每个文档添加一个带有ObjectId值的_id字段。</p>
<p>db.collection.insert() 可以插入单个入或多个文档到collection集合中。<br>插入单个document时传参参考db.collection.insertOne()方法<br>插入多个documents时传参参考db.collection.insertMany()方法</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.inventory.insert(&#123; item: <span class="string">"webgl"</span>,qty: <span class="number">130</span>,tags:[<span class="string">"cotton"</span>],size:&#123;h:<span class="number">28</span>,w:<span class="number">35.5</span>,uom:<span class="string">"cm"</span>&#125;&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</span><br></pre></td></tr></table></figure>
<p>db.collection.insert() 插入单个document时返回一个WriteResult对象的状态信息。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;db.inventory.insert([</span><br><span class="line">  &#123; item: <span class="string">"journal"</span>, qty: <span class="number">25</span>, tags: [<span class="string">"blank"</span>, <span class="string">"red"</span>], size: &#123; h: <span class="number">14</span>, w: <span class="number">21</span>, uom: <span class="string">"cm"</span> &#125; &#125;,</span><br><span class="line">  &#123; item: <span class="string">"mat"</span>, qty: <span class="number">85</span>, tags: [<span class="string">"gray"</span>], size: &#123; h: <span class="number">27.9</span>, w: <span class="number">35.5</span>, uom: <span class="string">"cm"</span> &#125; &#125;,</span><br><span class="line">  &#123; item: <span class="string">"mousepad"</span>, qty: <span class="number">25</span>, tags: [<span class="string">"gel"</span>, <span class="string">"blue"</span>], size: &#123; h: <span class="number">19</span>, w: <span class="number">22.85</span>, uom: <span class="string">"cm"</span> &#125; &#125;</span><br><span class="line">])</span><br><span class="line">BulkWriteResult(&#123;</span><br><span class="line">  <span class="string">"writeErrors"</span> : [ ],</span><br><span class="line">  <span class="string">"writeConcernErrors"</span> : [ ],</span><br><span class="line">  <span class="string">"nInserted"</span> : <span class="number">3</span>,</span><br><span class="line">  <span class="string">"nUpserted"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">"nMatched"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">"nModified"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">"nRemoved"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="string">"upserted"</span> : [ ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>db.collection.insert() 插入多个documents时返回一个操作状态的BulkWriteResult对象，以上操作成功插入documents后返回的BulkWriteResult对象</p>
<h2 id="Insert_Behavior__28_u63D2_u5165_u884C_u4E3A_29"><a href="#Insert_Behavior__28_u63D2_u5165_u884C_u4E3A_29" class="headerlink" title="Insert Behavior (插入行为)"></a>Insert Behavior (插入行为)</h2><h3 id="Collection_Creation__28_u96C6_u5408_u521B_u5EFA_29"><a href="#Collection_Creation__28_u96C6_u5408_u521B_u5EFA_29" class="headerlink" title="Collection Creation (集合创建)"></a>Collection Creation (集合创建)</h3><p>如果集合(collection)不存在，插入操作将会创建这个集合(collection)</p>
<h3 id="id_Field__28_id_u5B57_u6BB5_29"><a href="#id_Field__28_id_u5B57_u6BB5_29" class="headerlink" title="_id Field (_id字段)"></a>_id Field (_id字段)</h3><p>在MongoDB中，存储在集合(collection)中的每个文档都需要一个唯一的_id字段作为主键。 如果插入的文档省略_id字段，MongoDB驱动程序会自动为_id字段生成ObjectId。</p>
<h3 id="Atomicity"><a href="#Atomicity" class="headerlink" title="Atomicity"></a>Atomicity</h3><p>All write operations in MongoDB are atomic on the level of a single document. For more information on MongoDB and atomicity, see Atomicity and Transactions</p>
<h3 id="Write_Acknowledgement"><a href="#Write_Acknowledgement" class="headerlink" title="Write Acknowledgement"></a>Write Acknowledgement</h3><p>With write concerns, you can specify the level of acknowledgement requested from MongoDB for write operations. For details, see Write Concern.</p>
<h1 id="u67E5"><a href="#u67E5" class="headerlink" title="查"></a>查</h1><p>1、db.collection.find() 方法</p>
<p>从集合中查找所有文档，将空文档{}作为查询过滤条件取入db.collection.find({})方法里。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; use sb</span><br><span class="line">&gt; db.intory.find([</span><br><span class="line">   &#123; item: <span class="string">"journal"</span>, qty: <span class="number">25</span>, size: &#123; h: <span class="number">14</span>, w: <span class="number">21</span>, uom: <span class="string">"cm"</span> &#125;, status: <span class="string">"A"</span> &#125;,</span><br><span class="line">   &#123; item: <span class="string">"notebook"</span>, qty: <span class="number">50</span>, size: &#123; h: <span class="number">8.5</span>, w: <span class="number">11</span>, uom: <span class="string">"in"</span> &#125;, status: <span class="string">"A"</span> &#125;,</span><br><span class="line">   &#123; item: <span class="string">"paper"</span>, qty: <span class="number">100</span>, size: &#123; h: <span class="number">8.5</span>, w: <span class="number">11</span>, uom: <span class="string">"in"</span> &#125;, status: <span class="string">"D"</span> &#125;,</span><br><span class="line">   &#123; item: <span class="string">"planner"</span>, qty: <span class="number">75</span>, size: &#123; h: <span class="number">22.85</span>, w: <span class="number">30</span>, uom: <span class="string">"cm"</span> &#125;, status: <span class="string">"D"</span> &#125;,</span><br><span class="line">   &#123; item: <span class="string">"postcard"</span>, qty: <span class="number">45</span>, size: &#123; h: <span class="number">10</span>, w: <span class="number">15.25</span>, uom: <span class="string">"cm"</span> &#125;, status: <span class="string">"A"</span> &#125;</span><br><span class="line">])</span><br><span class="line">&gt; db.intory.<span class="function"><span class="title">find</span></span>()</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958e"</span>), <span class="string">"item"</span> : <span class="string">"notebook"</span>, <span class="string">"qty"</span> : <span class="number">50</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958f"</span>), <span class="string">"item"</span> : <span class="string">"paper"</span>, <span class="string">"qty"</span> : <span class="number">100</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9590"</span>), <span class="string">"item"</span> : <span class="string">"planner"</span>, <span class="string">"qty"</span> : <span class="number">75</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">22.85</span>, <span class="string">"w"</span> : <span class="number">30</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9591"</span>), <span class="string">"item"</span> : <span class="string">"postcard"</span>, <span class="string">"qty"</span> : <span class="number">45</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">10</span>, <span class="string">"w"</span> : <span class="number">15.25</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>##指定平等条件 (Specify Equality Condition)</p>
<p>指定查询条件。使用{field:value}表达示,在查询文档里</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123;status:<span class="string">'A'</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958e"</span>), <span class="string">"item"</span> : <span class="string">"notebook"</span>, <span class="string">"qty"</span> : <span class="number">50</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9591"</span>), <span class="string">"item"</span> : <span class="string">"postcard"</span>, <span class="string">"qty"</span> : <span class="number">45</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">10</span>, <span class="string">"w"</span> : <span class="number">15.25</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="u4F7F_u7528_u67E5_u8BE2_u8FD0_u7B97_u7B26_u6307_u5B9A_u6761_u4EF6__28Specify_Conditions_Using_Query_Operators_29"><a href="#u4F7F_u7528_u67E5_u8BE2_u8FD0_u7B97_u7B26_u6307_u5B9A_u6761_u4EF6__28Specify_Conditions_Using_Query_Operators_29" class="headerlink" title="使用查询运算符指定条件 (Specify Conditions Using Query Operators)"></a>使用查询运算符指定条件 (Specify Conditions Using Query Operators)</h3><p>文档查询时，可以使用查询运算符作为指定条件，语法如下：</p>
<blockquote>
<p>{ field1 : { operator1 : value1 }, …}</p>
</blockquote>
<p>下面这个例子，检所所有文档从intory集合中，当status等于”A” or “D”</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123;status:&#123;<span class="variable">$in</span>:[<span class="string">'A'</span>,<span class="string">'D'</span>]&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958e"</span>), <span class="string">"item"</span> : <span class="string">"notebook"</span>, <span class="string">"qty"</span> : <span class="number">50</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958f"</span>), <span class="string">"item"</span> : <span class="string">"paper"</span>, <span class="string">"qty"</span> : <span class="number">100</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9590"</span>), <span class="string">"item"</span> : <span class="string">"planner"</span>, <span class="string">"qty"</span> : <span class="number">75</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">22.85</span>, <span class="string">"w"</span> : <span class="number">30</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9591"</span>), <span class="string">"item"</span> : <span class="string">"postcard"</span>, <span class="string">"qty"</span> : <span class="number">45</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">10</span>, <span class="string">"w"</span> : <span class="number">15.25</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>上面例子等价于下面这个</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123;<span class="variable">$or</span>:[&#123;status:<span class="string">'A'</span>&#125;,&#123;status:<span class="string">'D'</span>&#125;]&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958e"</span>), <span class="string">"item"</span> : <span class="string">"notebook"</span>, <span class="string">"qty"</span> : <span class="number">50</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958f"</span>), <span class="string">"item"</span> : <span class="string">"paper"</span>, <span class="string">"qty"</span> : <span class="number">100</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">8.5</span>, <span class="string">"w"</span> : <span class="number">11</span>, <span class="string">"uom"</span> : <span class="string">"in"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9590"</span>), <span class="string">"item"</span> : <span class="string">"planner"</span>, <span class="string">"qty"</span> : <span class="number">75</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">22.85</span>, <span class="string">"w"</span> : <span class="number">30</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"D"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9591"</span>), <span class="string">"item"</span> : <span class="string">"postcard"</span>, <span class="string">"qty"</span> : <span class="number">45</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">10</span>, <span class="string">"w"</span> : <span class="number">15.25</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>虽然可以使用$or运算符表达此查询，但在对同一个字段执行相同性检查时，请使用$in运算符而不是$or运算符</p>
<h3 id="u6307_u5B9Aand_u6761_u4EF6_28Specify_AND_Conditions_29"><a href="#u6307_u5B9Aand_u6761_u4EF6_28Specify_AND_Conditions_29" class="headerlink" title="指定and条件(Specify AND Conditions)"></a>指定and条件(Specify AND Conditions)</h3><p>复合查询可以为集合的文档中的多个字段指定条件。隐式地，逻辑AND连接复合查询的子句，以便查询选择集合中与所有条件匹配的文档。</p>
<p>下面这个例子，查找集合中的所有文档，当status=’A’ and qty&lt;30($lt)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123;status:<span class="string">'A'</span>,qty:&#123;<span class="variable">$lt</span>:<span class="number">30</span>&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="u6307_u5B9Aor_u6761_u4EF6_28Specify_OR_Conditions_29"><a href="#u6307_u5B9Aor_u6761_u4EF6_28Specify_OR_Conditions_29" class="headerlink" title="指定or条件(Specify OR Conditions)"></a>指定or条件(Specify OR Conditions)</h3><p>下面这个例子，查找集合中的所有文档，当status=’A’ or qty&lt;30($lt)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123; <span class="variable">$or</span>:[ &#123;status:A,qty:&#123;<span class="variable">$lt</span>:<span class="number">30</span>&#125;&#125; ] &#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb958d"</span>), <span class="string">"item"</span> : <span class="string">"journal"</span>, <span class="string">"qty"</span> : <span class="number">25</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">14</span>, <span class="string">"w"</span> : <span class="number">21</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="u6307_u5B9AAND_u4EE5_u53CAOR_u6761_u4EF6__28Specify_AND_as_well_as_OR_Conditions_29"><a href="#u6307_u5B9AAND_u4EE5_u53CAOR_u6761_u4EF6__28Specify_AND_as_well_as_OR_Conditions_29" class="headerlink" title="指定AND以及OR条件 (Specify AND as well as OR Conditions)"></a>指定AND以及OR条件 (Specify AND as well as OR Conditions)</h3><p>下面这个例子，查找集合中的所有文档，当status=’A’ and ( qty&lt;30($lt) or item字段值以p开始 )</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.intory.find(&#123;</span><br><span class="line">  status:<span class="string">'A'</span>,</span><br><span class="line">  <span class="variable">$or</span>:[&#123;qtp:&#123;<span class="variable">$lt</span>:<span class="number">30</span>&#125;&#125;,&#123; item:/^p/ &#125;]</span><br><span class="line">&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"58aa82bfa8aebe2021fb9591"</span>), <span class="string">"item"</span> : <span class="string">"postcard"</span>, <span class="string">"qty"</span> : <span class="number">45</span>, <span class="string">"size"</span> : &#123; <span class="string">"h"</span> : <span class="number">10</span>, <span class="string">"w"</span> : <span class="number">15.25</span>, <span class="string">"uom"</span> : <span class="string">"cm"</span> &#125;, <span class="string">"status"</span> : <span class="string">"A"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>今天就简单的介绍了一下查询的方法，下篇文章介绍下查询运算符</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天这篇文章主要介绍下集合(collenction)的增查改删</p>
<p>切换到对应的数据库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line"]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb常用命令之新建与删除数据库]]></title>
    <link href="http://yoursite.com/2017/02/15/mongodb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8B%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2017/02/15/mongodb常用命令之新建与删除数据库/</id>
    <published>2017-02-15T08:10:09.000Z</published>
    <updated>2017-11-17T02:21:02.000Z</updated>
    <content type="html"><![CDATA[<p>这篇文章记录Mongodb的一些常用命令</p>
<h4 id="u521B_u5EFA_u6570_u636E_u5E93"><a href="#u521B_u5EFA_u6570_u636E_u5E93" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use databasename</span><br></pre></td></tr></table></figure>
<p>如果数据库不存在，则创建数据库，否则切换到指定数据库。</p>
<p>实例</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; use sb</span><br><span class="line">switched to db sb</span><br><span class="line">&gt; db</span><br><span class="line">sb</span><br></pre></td></tr></table></figure>
<p>这里我成功创建数据库sb</p>
<h4 id="u67E5_u770B_u6240_u6709_u6570_u636E_u5E93"><a href="#u67E5_u770B_u6240_u6709_u6570_u636E_u5E93" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">admin  <span class="number">0.000</span>GB</span><br><span class="line"><span class="built_in">local</span>  <span class="number">0.000</span>GB</span><br></pre></td></tr></table></figure>
<p>刚刚新创建的数据库没有显示出不，要显示它，需要向sb数据库的sb集合(collection)插入一条数据 </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.sb.insert(&#123;<span class="string">"text"</span>:<span class="string">"插入一条数据"</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; db.name.insert(&#123;<span class="string">"name"</span>:<span class="string">"likai"</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; show collections</span><br><span class="line">name</span><br><span class="line">sb</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">admin  <span class="number">0.000</span>GB</span><br><span class="line"><span class="built_in">local</span>  <span class="number">0.000</span>GB</span><br><span class="line">sb     <span class="number">0.000</span>GB</span><br></pre></td></tr></table></figure>
<h4 id="u5220_u9664_u6570_u636E_u5E93_u91CC_u7684_u96C6_u5408_28collection_29"><a href="#u5220_u9664_u6570_u636E_u5E93_u91CC_u7684_u96C6_u5408_28collection_29" class="headerlink" title="删除数据库里的集合(collection)"></a>删除数据库里的集合(collection)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; use sb </span><br><span class="line">switched to db sb</span><br><span class="line">&gt; db.name.insert(&#123;<span class="string">"name"</span>:<span class="string">"likai"</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; show collections</span><br><span class="line">name</span><br><span class="line">sb</span><br><span class="line">&gt; db.name.drop()</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; show collections</span><br><span class="line">sb</span><br></pre></td></tr></table></figure>
<h4 id="u5220_u9664_u6570_u636E_u5E93"><a href="#u5220_u9664_u6570_u636E_u5E93" class="headerlink" title="删除数据库"></a>删除数据库</h4><p>语法如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase()</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; use sb <span class="comment">#切换到需要删除的数据库</span></span><br><span class="line">switched to db sb</span><br><span class="line">&gt; db.<span class="function"><span class="title">dropDatabase</span></span>()</span><br><span class="line">&#123; <span class="string">"dropped"</span> : <span class="string">"sb"</span>, <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br><span class="line">&gt; show dbs</span><br><span class="line">admin  <span class="number">0.000</span>GB</span><br><span class="line"><span class="built_in">local</span>  <span class="number">0.000</span>GB</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>这篇文章记录Mongodb的一些常用命令</p>
<h4 id="u521B_u5EFA_u6570_u636E_u5E93"><a href="#u521B_u5EFA_u6570_u636E_u5E93" class="headerlink" title="创建数据库"]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[macOS下ssh连接linux免密码登录]]></title>
    <link href="http://yoursite.com/2017/02/08/macOS%E4%B8%8Bssh%E8%BF%9E%E6%8E%A5linux%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2017/02/08/macOS下ssh连接linux免密码登录/</id>
    <published>2017-02-08T07:13:59.000Z</published>
    <updated>2017-02-16T03:40:23.000Z</updated>
    <content type="html"><![CDATA[<p>文本主要讲的，是如何简化mac连接到linux服务器的步骤，提交效率。</p>
<p>所谓的“免登陆”其实是不存在的，只是说，从验证密码的登录方式，改为公私钥对的登录验证方式。使用后者的方式，每次会由ssh客户端自动发送验证信息，所以就免去了人工输入密码，看起来好像“免登陆”一样。</p>
<p>关于这么做的原理，大家可以自己去Google，关键词是“非对称加密”，“RSA算法”，“基于ssh密钥对的自动登录”，等等，我就不多解释了。我直接说操作步骤吧：</p>
<p>1.生成密钥对<br>2.用密码登录远程主机，将公钥拷贝过去<br>3.done</p>
<a id="more"></a>
<p>文本主要讲的，是如何简化mac连接到linux服务器的步骤，提交效率。</p>
<p>所谓的“免登陆”其实是不存在的，只是说，从验证密码的登录方式，改为公私钥对的登录验证方式。使用后者的方式，每次会由ssh客户端自动发送验证信息，所以就免去了人工输入密码，看起来好像“免登陆”一样。</p>
<p>关于这么做的原理，大家可以自己去Google，关键词是“非对称加密”，“RSA算法”，“基于ssh密钥对的自动登录”，等等，我就不多解释了。我直接说操作步骤吧：</p>
<p>1.生成密钥对<br>2.用密码登录远程主机，将公钥拷贝过去<br>3.done</p>
<h1 id="u7B2C_u4E00_u6B65_uFF1A_u751F_u6210_u5BC6_u5319_u5BF9"><a href="#u7B2C_u4E00_u6B65_uFF1A_u751F_u6210_u5BC6_u5319_u5BF9" class="headerlink" title="第一步：生成密匙对"></a>第一步：生成密匙对</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="comment">#用户目录下 </span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment">#执行结果如下：</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">charles@mac:~ &gt; ssh-keygen -t rsa</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/charles/.ssh/id_rsa):</span><br><span class="line">Created directory ‘/Users/charles/.ssh’.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /Users/charles/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /Users/charles/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">c8:<span class="number">4</span>b:<span class="number">85</span>:<span class="number">87</span>:<span class="number">90</span>:<span class="number">7</span>c:<span class="number">1</span>这一段kdy隐藏....... charles@TCMBP.local</span><br><span class="line">The key’s randomart image is:</span><br><span class="line">+–[ RSA <span class="number">2048</span>]—-+</span><br><span class="line">| … .. o=.. |</span><br><span class="line">| +.*o. …+ |</span><br><span class="line">| Bo+o. o.. |</span><br><span class="line">| …+E o |</span><br><span class="line">| + S |</span><br><span class="line">| . . |</span><br><span class="line">| . |</span><br><span class="line">| |</span><br><span class="line">| |</span><br><span class="line">+—————–+</span><br></pre></td></tr></table></figure>
<p>注意：提示enter passphrase的时候，不要输入，因为你本来就想少打一次密码的，这里如果设置了用密码保护私钥，那登录的时候还是要输密码，就白做了。</p>
<p>做完这个步骤后，cd ~/.ssh，你就可以看到你刚才生成的密钥对，id_rsa是私钥，id_rsa.pub是公钥。下一步，就是把公钥拷贝到目标主机上。</p>
<h1 id="u7B2C_u4E8C_u6B65_uFF1A_u5C06_u516C_u94A5_u62F7_u8D1D_u5230_u76EE_u6807_u4E3B_u673A"><a href="#u7B2C_u4E8C_u6B65_uFF1A_u5C06_u516C_u94A5_u62F7_u8D1D_u5230_u76EE_u6807_u4E3B_u673A" class="headerlink" title="第二步：将公钥拷贝到目标主机"></a>第二步：将公钥拷贝到目标主机</h1><p>用ssh登录到目标主机，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@host</span><br></pre></td></tr></table></figure></p>
<p>username主机登录用户<br>host 主机IP<br>这里需要手动输入登录密码</p>
<p>然后cd ~/.ssh目录，如果目录不存在，那么要自己创建mkdir -p ~/.ssh</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure>
<p>你今后要用哪个帐户登录主机，就在哪个帐户的home目录下操作，如果要免登陆root，就要去/root下操作。使用~比较好，不用多想了。</p>
<p>有了.ssh目录后，进去，然后把id_rsa.pub传过去，<br>可以用scp命令，这里要做的一个主要操作，就是将id_rsa.pub，的文件内容，写到一个叫authorized_keys的文件中去<br>如果目标主机的相应用户名下已经有了.ssh目录和authorized_keys文件，那你操作要小心一点，可能别人也做过免登陆的设置，这个时候你要小心不要把别人的设置给覆盖了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/id_rsa.pub username@host:/home/user/.ssh #&#36825;&#37324;&#38656;&#35201;&#25163;&#21160;&#36755;&#20837;&#19968;&#27425;&#23494;&#30721;&#10;#&#25991;&#20214;&#19978;&#20256;&#25104;&#21151;&#21518;&#65292;&#36830;&#25509;&#21040;&#26381;&#21153;&#22120;&#10;ssh username@host #&#36825;&#37324;&#38656;&#35201;&#25163;&#21160;&#36755;&#20837;&#19968;&#27425;&#23494;&#30721;&#10;#&#22914;&#26524;.ssh&#30446;&#24405;&#19981;&#23384;&#22312; &#21019;&#24314;&#10;mkdir -p ~/.ssh&#10;cd ~/.ssh&#10;#&#22914;&#26524;&#27809;&#26377;authorized_keys&#25991;&#20214;&#38656;&#35201;&#21019;&#24314;&#25991;&#20214;&#10;touch authorized_keys&#10;cat id_rsa.pub &#62;&#62; authorized_keys ## &#23558;&#20844;&#38053;&#36861;&#21152;&#21040; authorized_keys &#25991;&#20214;&#26368;&#21518;&#19968;&#34892;</span><br></pre></td></tr></table></figure>
<p>到此免密码登录基本完成</p>
<p>之后ssh连接的时候，就不需要手动输入密码</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>文本主要讲的，是如何简化mac连接到linux服务器的步骤，提交效率。</p>
<p>所谓的“免登陆”其实是不存在的，只是说，从验证密码的登录方式，改为公私钥对的登录验证方式。使用后者的方式，每次会由ssh客户端自动发送验证信息，所以就免去了人工输入密码，看起来好像“免登陆”一样。</p>
<p>关于这么做的原理，大家可以自己去Google，关键词是“非对称加密”，“RSA算法”，“基于ssh密钥对的自动登录”，等等，我就不多解释了。我直接说操作步骤吧：</p>
<p>1.生成密钥对<br>2.用密码登录远程主机，将公钥拷贝过去<br>3.done</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac安装配置mongodb]]></title>
    <link href="http://yoursite.com/2017/02/08/mac%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEmongodb/"/>
    <id>http://yoursite.com/2017/02/08/mac安装配置mongodb/</id>
    <published>2017-02-08T02:35:49.000Z</published>
    <updated>2017-02-16T05:12:55.000Z</updated>
    <content type="html"><![CDATA[<p>mac下安装mongodb一般有两种方式,一种是下载压缩包，另一种是通过homebrew命令来安装。</p>
<p>本人采用是压缩包安装，下载地址 <a href="https://www.mongodb.org/dl/osx/x86_64" target="_blank" rel="external">https://www.mongodb.org/dl/osx/x86_64</a>选择对应版本<br><a id="more"></a></p>
<p>mac下安装mongodb一般有两种方式,一种是下载压缩包，另一种是通过homebrew命令来安装。</p>
<p>本人采用是压缩包安装，下载地址 <a href="https://www.mongodb.org/dl/osx/x86_64" target="_blank" rel="external">https://www.mongodb.org/dl/osx/x86_64</a>选择对应版本</p>
<p>1、下载成功后，文件解压到/Users/likai/下，并将文件夹重名为mongodb</p>
<p>2、在mongodb目录下新建二个目录：data/db——和于存放数据文件，etc——用于存放mongod.conf。<br>  使用vim或其它编辑器创建mongod.conf文件，内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mongodb config file </span></span><br><span class="line">dbpath=/Users/likai/mongodb/data/db</span><br><span class="line">logpath=/Users/likai/mongodb/mongod.log</span><br><span class="line">logappend=<span class="literal">true</span></span><br><span class="line">port=<span class="number">27017</span></span><br><span class="line">fork=<span class="literal">true</span></span><br><span class="line">auth=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h4 id="u6D4B_u8BD5_u540E_u7528_u914D_u7F6E_u6587_u4EF6_u542F_u52A8_u597D_u50CF_u4E0D_u884C"><a href="#u6D4B_u8BD5_u540E_u7528_u914D_u7F6E_u6587_u4EF6_u542F_u52A8_u597D_u50CF_u4E0D_u884C" class="headerlink" title="测试后用配置文件启动好像不行"></a>测试后用配置文件启动好像不行</h4><h4 id="u9700_u8981_u521B_u5EFA_u9ED8_u8BA4_u7684db_u6570_u636E_u6587_u4EF6_u5939"><a href="#u9700_u8981_u521B_u5EFA_u9ED8_u8BA4_u7684db_u6570_u636E_u6587_u4EF6_u5939" class="headerlink" title="需要创建默认的db数据文件夹"></a>需要创建默认的db数据文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">sudo mkdir data</span><br><span class="line">mkdir data/db</span><br><span class="line"><span class="comment"># 修改下权限</span></span><br><span class="line">sudo chown -R <span class="variable">$USER</span> data</span><br></pre></td></tr></table></figure>
<p>这里创建好后，用之后配置的mongod启动服务</p>
<p>3、修改系统环境变量PATH，把 /Users/likai/mongodb/bin 目录加到PATH中。<br>修改环境变量的方法比较多，这里采用如下方式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:/Users/likai/mongodb/bin'</span>&gt;&gt;~/.bash_profile</span><br></pre></td></tr></table></figure></p>
<p>添加完成后，需要重启shell终端或者执行source ~/.bash_profile命令，让环境变量生效</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>
<p>执行后查看环境变量</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>环境变量生效后，就可以执行mongod,mongo等命令</p>
<p>启动mongodb服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod <span class="operator">-f</span> ~/mongodb/etc/mongodb.conf</span><br></pre></td></tr></table></figure>
<p>接连mongodb</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure>
<p>另外一种安全关闭方法</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall mongod</span><br></pre></td></tr></table></figure>
<p>到现在为止,完成了mongodb的安装、配置、服务器端启动、客户端启动、关闭mongodb,下一步就是如何使用.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>mac下安装mongodb一般有两种方式,一种是下载压缩包，另一种是通过homebrew命令来安装。</p>
<p>本人采用是压缩包安装，下载地址 <a href="https://www.mongodb.org/dl/osx/x86_64">https://www.mongodb.org/dl/osx/x86_64</a>选择对应版本<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[sed简明使用教程]]></title>
    <link href="http://yoursite.com/2017/02/04/%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/02/04/简明教程/</id>
    <published>2017-02-04T05:43:33.000Z</published>
    <updated>2017-02-04T07:35:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u7528s_u547D_u4EE4_u66FF_u6362"><a href="#u7528s_u547D_u4EE4_u66FF_u6362" class="headerlink" title="用s命令替换"></a>用s命令替换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat pets.txt</span><br><span class="line">This is my cat</span><br><span class="line">  my cat<span class="string">'s name is betty</span><br><span class="line">This is my dog</span><br><span class="line">  my dog'</span>s name is frank</span><br><span class="line">This is my fish</span><br><span class="line">  my fish<span class="string">'s name is george</span><br><span class="line">This is my goat</span><br><span class="line">  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure>
<p>把其中的my字符串替换成Hao Chen’s，下面的语句应该很好理解（s表示替换命令，/my/表示匹配my，/Hao Chen’s/表示把匹配替换成Hao Chen’s，/g 表示一行上的替换所有的匹配）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">"s/my/Hao Chen's/g"</span> pets.txt</span><br><span class="line">This is Hao Chen<span class="string">'s cat</span><br><span class="line">  Hao Chen'</span>s cat<span class="string">'s name is betty</span><br><span class="line">This is Hao Chen'</span>s dog</span><br><span class="line">  Hao Chen<span class="string">'s dog'</span>s name is frank</span><br><span class="line">This is Hao Chen<span class="string">'s fish</span><br><span class="line">  Hao Chen'</span>s fish<span class="string">'s name is george</span><br><span class="line">This is Hao Chen'</span>s goat</span><br><span class="line">  Hao Chen<span class="string">'s goat'</span>s name is adam</span><br></pre></td></tr></table></figure>
<p>注意：如果你要使用单引号，那么你没办法通过\’这样来转义，就有双引号就可以了，在双引号内可以用\”来转义。</p>
<p>再注意：上面的sed并没有对文件的内容改变，只是把处理过后的内容输出，如果你要写回文件，你可以使用重定向，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">"s/my/Hao Chen's/g"</span> pets.txt &gt; hao_pets.txt</span><br></pre></td></tr></table></figure></p>
<p>或使用 -i 参数直接修改文件内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i <span class="string">"s/my/Hao Chen's/g"</span> pets.txt</span><br></pre></td></tr></table></figure></p>
<p>在每一行最前面加点东西：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'s/^/#/g'</span> pets.txt</span><br><span class="line"><span class="comment">#This is my cat</span></span><br><span class="line"><span class="comment">#  my cat's name is betty</span></span><br><span class="line"><span class="comment">#This is my dog</span></span><br><span class="line"><span class="comment">#  my dog's name is frank</span></span><br><span class="line"><span class="comment">#This is my fish</span></span><br><span class="line"><span class="comment">#  my fish's name is george</span></span><br><span class="line"><span class="comment">#This is my goat</span></span><br><span class="line"><span class="comment">#  my goat's name is adam</span></span><br></pre></td></tr></table></figure></p>
<p>在每一行最后面加点东西：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'s/$/ --- /g'</span> pets.txt</span><br><span class="line">This is my cat ---</span><br><span class="line">  my cat<span class="string">'s name is betty ---</span><br><span class="line">This is my dog ---</span><br><span class="line">  my dog'</span>s name is frank ---</span><br><span class="line">This is my fish ---</span><br><span class="line">  my fish<span class="string">'s name is george ---</span><br><span class="line">This is my goat ---</span><br><span class="line">  my goat'</span>s name is adam ---</span><br></pre></td></tr></table></figure></p>
<p>顺手介绍一下正则表达式的一些最基本的东西：</p>
<ul>
<li>^ 表示一行的开头。如：/^#/ 以#开头的匹配。</li>
<li>$ 表示一行的结尾。如：/}$/ 以}结尾的匹配。</li>
<li>\&lt; 表示词首。 如 \&lt;abc 表示以 abc 为首的詞。</li>
<li><span>\&gt;</span> 表示词尾。 如 abc\&gt; 表示以 abc 結尾的詞。</li>
<li>. 表示任何单个字符。</li>
<li>* 表示某个字符出现了0次或多次。</li>
<li>[ ] 字符集合。 如：[abc]表示匹配a或b或c，还有[a-zA-Z]表示匹配所有的26个字符。如果其中有^表示反，如[^a]表示非a的字符</li>
</ul>
<p>正规则表达式是一些很牛的事，比如我们要去掉某html中的tags：<br>HTML.TXT<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">b</span>&gt;</span>This<span class="tag">&lt;/<span class="title">b</span>&gt;</span> is what <span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">"text-decoration: underline;"</span>&gt;</span>I<span class="tag">&lt;/<span class="title">span</span>&gt;</span> meant. Understand?</span><br></pre></td></tr></table></figure></p>
<p>看看我们的sed命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你这样搞的话，就会有问题</span></span><br><span class="line">$ sed <span class="string">'s/&lt;.*&gt;//g'</span> html.txt</span><br><span class="line"> meant. Understand?</span><br><span class="line"><span class="comment"># 要解决上面的那个问题，就得像下面这样。</span></span><br><span class="line"><span class="comment"># 其中的'[^&gt;]' 指定了除了&gt;的字符重复0次或多次。</span></span><br><span class="line">$ sed <span class="string">'s/&lt;[^&gt;]*&gt;//g'</span> html.txt</span><br><span class="line">This is what I meant. Understand?</span><br></pre></td></tr></table></figure></p>
<p>我们再来看看指定需要替换的内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'3s/my/your/g'</span> pets.txt</span><br><span class="line">This is my cat</span><br><span class="line">  my cat<span class="string">'s name is betty</span><br><span class="line">This is your dog</span><br><span class="line">  my dog'</span>s name is frank</span><br><span class="line">This is my fish</span><br><span class="line">  my fish<span class="string">'s name is george</span><br><span class="line">This is my goat</span><br><span class="line">  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<p>下面的命令只替换第3到第6行的文本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'3,6s/my/your/g'</span> pets.txt</span><br><span class="line">This is my cat</span><br><span class="line">  my cat<span class="string">'s name is betty</span><br><span class="line">This is your dog</span><br><span class="line">  your dog'</span>s name is frank</span><br><span class="line">This is your fish</span><br><span class="line">  your fish<span class="string">'s name is george</span><br><span class="line">This is my goat</span><br><span class="line">  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat my.txt</span><br><span class="line">This is my cat my cat<span class="string">'s name is betty</span><br><span class="line">This is my dog my dog'</span>s name is frank</span><br><span class="line">This is my fish my fish<span class="string">'s name is george</span><br><span class="line">This is my goat my goat'</span>s name is adam</span><br></pre></td></tr></table></figure>
<p>只替换每一行的第一个s：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed &#39;s/s/S/1&#39; my.txt&#10;ThiS is my cat my cat&#39;S name is betty&#10;ThiS is my dog my dog&#39;S name is frank&#10;ThiS is my fish my fiSh&#39;s name is george&#10;ThiS is my goat my goat&#39;S name is adam</span><br></pre></td></tr></table></figure></p>
<p>只替换每一行的第二个s：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'s/s/S/2'</span> my.txt</span><br><span class="line">This iS my cat my cat<span class="string">'s name is betty</span><br><span class="line">This iS my dog my dog'</span>s name is frank</span><br><span class="line">This iS my fish my fish<span class="string">'s name is george</span><br><span class="line">This iS my goat my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<p>只替换第一行的第3个以后的s：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'s/s/S/3g'</span> my.txt</span><br><span class="line">This is my cat, my cat<span class="string">'S name iS betty</span><br><span class="line">This is my dog, my dog'</span>S name iS frank</span><br><span class="line">This is my <span class="keyword">fi</span>Sh, my <span class="keyword">fi</span>Sh<span class="string">'S name iS george</span><br><span class="line">This is my goat, my goat'</span>S name iS adam</span><br></pre></td></tr></table></figure></p>
<h2 id="u591A_u4E2A_u5339_u914D"><a href="#u591A_u4E2A_u5339_u914D" class="headerlink" title="多个匹配"></a>多个匹配</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'1,3s/my/your/g;3,$s/This/That/g'</span> my.txt</span><br><span class="line">This is your cat your cat<span class="string">'s name is betty</span><br><span class="line">This is your dog your dog'</span>s name is frank</span><br><span class="line">That is your fish your fish<span class="string">'s name is george</span><br><span class="line">That is my goat my goat'</span>s name is adam</span><br></pre></td></tr></table></figure>
<p>上面的命令等价于：（注：下面使用的是sed的-e命令行参数）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="operator">-e</span> <span class="string">'1,3s/my/your/g'</span> <span class="operator">-e</span> <span class="string">'3,$s/This/That/g'</span> my.txt</span><br><span class="line">This is your cat your cat<span class="string">'s name is betty</span><br><span class="line">This is your dog your dog'</span>s name is frank</span><br><span class="line">That is your fish your fish<span class="string">'s name is george</span><br><span class="line">That is my goat my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<p>我们可以使用&amp;来当做被匹配的变量，然后可以在基本左右加点东西。如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'s/my/&lt;&amp;&gt;/g'</span> my.txt</span><br><span class="line">This is &lt;my&gt; cat &lt;my&gt; cat<span class="string">'s name is betty</span><br><span class="line">This is &lt;my&gt; dog &lt;my&gt; dog'</span>s name is frank</span><br><span class="line">This is &lt;my&gt; fish &lt;my&gt; fish<span class="string">'s name is george</span><br><span class="line">This is &lt;my&gt; goat &lt;my&gt; goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<h2 id="u5706_u62EC_u53F7_u5339_u914D"><a href="#u5706_u62EC_u53F7_u5339_u914D" class="headerlink" title="圆括号匹配"></a>圆括号匹配</h2><p>使用圆括号匹配的示例：（圆括号括起来的正则表达式所匹配的字符串会可以当成变量来使用，sed中使用的是\1,\2…）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'s/This is my \([^,]*\),.*is \(.*\)/\1:\2/g'</span> my.txt</span><br><span class="line">cat:betty</span><br><span class="line">dog:frank</span><br><span class="line">fish:george</span><br><span class="line">goat:adam</span><br></pre></td></tr></table></figure>
<p>上面这个例子中的正则表达式有点复杂，解开如下（去掉转义字符）：</p>
<p>正则为：This is my ([^,]<em>),.</em>is (.*)<br>匹配为：This is my (cat),……….is (betty)</p>
<p>然后：\1就是cat，\2就是betty</p>
<h2 id="sed_u7684_u547D_u4EE4"><a href="#sed_u7684_u547D_u4EE4" class="headerlink" title="sed的命令"></a>sed的命令</h2><p>让我们回到最一开始的例子pets.txt，让我们来看几个命令：</p>
<p>N命令</p>
<p>先来看N命令 —— 把下一行的内容纳入当成缓冲区做匹配。</p>
<p>下面的的示例会把原文本中的偶数行纳入奇数行匹配，而s只匹配并替换一次，所以，就成了下面的结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'N;s/my/your/'</span> pets.txt</span><br><span class="line">This is your cat </span><br><span class="line">  my cat<span class="string">'s name is betty</span><br><span class="line">This is your dog </span><br><span class="line">  my dog'</span>s name is frank</span><br><span class="line">This is your fish </span><br><span class="line">  my fish<span class="string">'s name is george</span><br><span class="line">This is your goat </span><br><span class="line">  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<p>也就是说，原来的文件成了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This is my cat\n  my cat<span class="string">'s name is betty</span><br><span class="line">This is my dog\n  my dog'</span>s name is frank</span><br><span class="line">This is my fish\n  my fish<span class="string">'s name is george</span><br><span class="line">This is my goat\n  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<p>这样一来，下面的例子你就明白了，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'N;s/\n/,/'</span> pets.txt</span><br><span class="line">This is my cat ,  my cat<span class="string">'s name is betty</span><br><span class="line">This is my dog ,  my dog'</span>s name is frank</span><br><span class="line">This is my fish ,  my fish<span class="string">'s name is george</span><br><span class="line">This is my goat ,  my goat'</span>s name is adam</span><br></pre></td></tr></table></figure></p>
<!-- ## a命令和i命令

a命令就是append， i命令就是insert，它们是用来添加行的。如：
```bash
# 其中的1i表明，其要在第1行前插入一行（insert）
$
``` -->
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7528s_u547D_u4EE4_u66FF_u6362"><a href="#u7528s_u547D_u4EE4_u66FF_u6362" class="headerlink" title="用s命令替换"></a>用s命令替换</h2><figure c]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016-08-04消息大改版]]></title>
    <link href="http://yoursite.com/2016/08/04/2016-08-04%E6%B6%88%E6%81%AF%E5%A4%A7%E6%94%B9%E7%89%88/"/>
    <id>http://yoursite.com/2016/08/04/2016-08-04消息大改版/</id>
    <published>2016-08-04T09:02:11.000Z</published>
    <updated>2016-08-04T09:33:22.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u8001_u5434_u670B_u53CB_u5708"><a href="#u8001_u5434_u670B_u53CB_u5708" class="headerlink" title="老吴朋友圈"></a>老吴朋友圈</h1><blockquote>
<p>showType显示类型：<br>视频 //暂时不添加<br>6=外链<br>7=纯文本<br>3=图文混排<br>2=列表</p>
</blockquote>
<h1 id="u5FAE_u4FE1_u5206_u4EAB"><a href="#u5FAE_u4FE1_u5206_u4EAB" class="headerlink" title="微信分享"></a>微信分享</h1><blockquote>
<p>#/message/mdetail/{id}/{type}<br>公告通告 ：publish<br>美文分享 ：read<br>老吴培训课 ：course<br>微商视频 ：video<br>微商海报 ：poster</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u8001_u5434_u670B_u53CB_u5708"><a href="#u8001_u5434_u670B_u53CB_u5708" class="headerlink" title="老吴朋友圈"></a>老吴朋友圈</h1><blockquote>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016-07-12新微商修改发货方式及更新记录]]></title>
    <link href="http://yoursite.com/2016/07/15/2016-07-12%E6%96%B0%E5%BE%AE%E5%95%86%E4%BF%AE%E6%94%B9%E5%8F%91%E8%B4%A7%E6%96%B9%E5%BC%8F%E5%8F%8A%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/07/15/2016-07-12新微商修改发货方式及更新记录/</id>
    <published>2016-07-15T02:14:17.000Z</published>
    <updated>2016-07-15T02:14:41.000Z</updated>
    <content type="html"><![CDATA[<h1 id="07-12__u6D4B_u8BD5_u670D_u52A1_u5668__u672C_u5730_u7248_u672C_u53F7_1-0-2"><a href="#07-12__u6D4B_u8BD5_u670D_u52A1_u5668__u672C_u5730_u7248_u672C_u53F7_1-0-2" class="headerlink" title="07-12 测试服务器 本地版本号 1.0.2"></a>07-12 测试服务器 本地版本号 1.0.2</h1><blockquote>
<p>个人资料修改方式，<br>实名认证；<br>买家无效订单列表，买家可以取消订单；<br>卖家待发货未转采购的订单可以置为无效订单；<br>卖家无效订单列表，列表可以将无效订单恢复为有效订单；<br>投诉上级</p>
</blockquote>
<h2 id="u4E70_u5BB6_u626B_u7801_u6536_u8D27"><a href="#u4E70_u5BB6_u626B_u7801_u6536_u8D27" class="headerlink" title="买家扫码收货"></a>买家扫码收货</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">1</span>,</span><br><span class="line">  statusCode      : <span class="number">4</span>,</span><br><span class="line">  canReceiveGood  : <span class="number">2</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u4E70_u5BB6_u786E_u8BA4_u6536_u8D27"><a href="#u4E70_u5BB6_u786E_u8BA4_u6536_u8D27" class="headerlink" title="买家确认收货"></a>买家确认收货</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">1</span>,</span><br><span class="line">  statusCode      : <span class="number">4</span>,</span><br><span class="line">  canReceiveGood  : <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">2</span>,</span><br><span class="line">  statusCode      : <span class="number">4</span>,</span><br><span class="line">  canReceiveGood  : !=<span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u4E70_u5BB6_u6536_u8D27"><a href="#u4E70_u5BB6_u6536_u8D27" class="headerlink" title="买家收货"></a>买家收货</h2><blockquote>
<p>canReceiveGood<br>0 不能确认收货<br>1 可以收货，不需要扫码<br>2 可以收货，必须扫码</p>
</blockquote>
<p>买家收货接口<br>version == 1 使用老接口<br>// base.url.buyerHandleOrder_url+”?a=buyer_confirm_received”</p>
<p>version == 2 使用新接口<br>// base.url.doOrder_url+”?a=buyer_received”</p>
<p>======================</p>
<h2 id="u5356_u5BB6_u786E_u8BA4_u53D1_u8D27"><a href="#u5356_u5BB6_u786E_u8BA4_u53D1_u8D27" class="headerlink" title="卖家确认发货"></a>卖家确认发货</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">1</span>,</span><br><span class="line">  canDeliverGood  : <span class="number">1</span>,</span><br><span class="line">  ismerge         : <span class="number">0</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u5356_u5BB6_u4E0B_u4E00_u6B65_u626B_u7801_u53D1_u8D27"><a href="#u5356_u5BB6_u4E0B_u4E00_u6B65_u626B_u7801_u53D1_u8D27" class="headerlink" title="卖家下一步扫码发货"></a>卖家下一步扫码发货</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">1</span>,</span><br><span class="line">  canDeliverGood  : <span class="number">2</span>,</span><br><span class="line">  ismerge         : <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  version         : <span class="number">2</span>,</span><br><span class="line">  ismerge         : <span class="number">0</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>canDeliverGood<br>0 不能点确认发货<br>1 确认发货不需要扫码<br>2 确认发货需要扫码</p>
</blockquote>
<p>卖家发货接口<br>version == 1 使用老接口<br>// base.url.sellerHandleOrder_url+”?a=seller_confirm_deliver”<br>version == 2 使用新接口<br>// base.url.doOrder_url+”?a=seller_deliver”</p>
<p>===========================</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="07-12__u6D4B_u8BD5_u670D_u52A1_u5668__u672C_u5730_u7248_u672C_u53F7_1-0-2"><a href="#07-12__u6D4B_u8BD5_u670D_u52A1_u5668__u672C_u57]]>
    </summary>
    
      <category term="新微商商城" scheme="http://yoursite.com/tags/%E6%96%B0%E5%BE%AE%E5%95%86%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016-07-13商品搜索与订单商品评论]]></title>
    <link href="http://yoursite.com/2016/07/13/2016-07-13%E5%95%86%E5%93%81%E6%90%9C%E7%B4%A2%E4%B8%8E%E8%AE%A2%E5%8D%95%E5%95%86%E5%93%81%E8%AF%84%E8%AE%BA/"/>
    <id>http://yoursite.com/2016/07/13/2016-07-13商品搜索与订单商品评论/</id>
    <published>2016-07-13T08:57:33.000Z</published>
    <updated>2016-07-15T02:39:06.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u529F_u80FD_u5546_u54C1_u641C_u7D22_u53C2_u6570"><a href="#u529F_u80FD_u5546_u54C1_u641C_u7D22_u53C2_u6570" class="headerlink" title="功能商品搜索参数"></a>功能商品搜索参数</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">  type  搜索类型 0：V币热兑,1：热卖商品</span><br><span class="line">*/</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">  sortType</span><br><span class="line">  descPrice 价格降序</span><br><span class="line">  ascPrice   价格升序</span><br><span class="line">  cost 销售</span><br><span class="line">*/</span></span><br><span class="line">&#123;</span><br><span class="line">  pageNow : <span class="number">1</span>,</span><br><span class="line">  pageSize : <span class="number">10</span>,</span><br><span class="line">  platform : <span class="number">1</span>,</span><br><span class="line">  keyword : <span class="string">''</span>,</span><br><span class="line">  type : type,</span><br><span class="line">  sortType : sortType,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u8BA2_u5355_u8BC4_u8BBA"><a href="#u8BA2_u5355_u8BC4_u8BBA" class="headerlink" title="订单评论"></a>订单评论</h2><blockquote>
<p>从订单列表进来时,查看订单是否已经评论<br>根据订单ID获取待评论产品列表【订单id】 //产品列表<br>/impcomment/comments/{orderid}</p>
<p>订单评论详情【订单id】  // 如果有数据就已经评论过了，这时不能在评论了，没数据就可以评论<br>/imordercomment/get/{orderid}</p>
<p>添加订单评论 // 订单没有评论过就可以添加评论<br>/imordercomment/add<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  orderId:orderId</span><br><span class="line">  wuliuGrade : <span class="number">1</span> <span class="comment">//商品包装满意度</span></span><br><span class="line">  speedGrade : <span class="number">1</span> <span class="comment">// 送货速度</span></span><br><span class="line">  distributionGrade : <span class="number">1</span> <span class="comment">//配送员服务态度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="u8BA2_u5355_u4E2D_u7684_u5355_u4E2A_u5546_u54C1_u8BC4_u8BBA"><a href="#u8BA2_u5355_u4E2D_u7684_u5355_u4E2A_u5546_u54C1_u8BC4_u8BBA" class="headerlink" title="订单中的单个商品评论"></a>订单中的单个商品评论</h2><blockquote>
<p>获取待评价产品详情【子订单id】<br>/impcomment/order1sDetail/{order1Id}<br>上传图片<br>/file/fdfsUpload // name = ‘attachs’<br>添加产品评论<br>/impcomment/add<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  imProductId : imProductId,  <span class="comment">// 商品ID</span></span><br><span class="line">  orderId     : orderId ,     <span class="comment">// 订单ID</span></span><br><span class="line">  order1Id    : order1Id,     <span class="comment">// 子订单ID</span></span><br><span class="line">  content     : <span class="string">'评论内容'</span>,    <span class="comment">//  评论内容</span></span><br><span class="line">  grade       : <span class="number">1</span>,            <span class="comment">// 星级1-5</span></span><br><span class="line">  commentImg  : <span class="string">''</span>,           <span class="comment">// 三张评论图片</span></span><br><span class="line">  commentImg1 : <span class="string">''</span>,</span><br><span class="line">  commentImg2 : <span class="string">''</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="u67E5_u770B_u8BA2_u5355_u4E2D_u5355_u4E2A_u5546_u54C1_u8BC4_u8BBA_u8BE6_u60C5"><a href="#u67E5_u770B_u8BA2_u5355_u4E2D_u5355_u4E2A_u5546_u54C1_u8BC4_u8BBA_u8BE6_u60C5" class="headerlink" title="查看订单中单个商品评论详情"></a>查看订单中单个商品评论详情</h2><blockquote>
<p>获取待评价产品详情【子订单id】<br>/impcomment/order1sDetail/{order1Id}<br>产品评论详情【产品ID】【子订单id】<br>/impcomment/detail/{productId}/{order1Id}</p>
</blockquote>
<h2 id="u5546_u54C1_u8BE6_u60C5_u7684_u8BC4_u8BBA_u5217_u8868"><a href="#u5546_u54C1_u8BE6_u60C5_u7684_u8BC4_u8BBA_u5217_u8868" class="headerlink" title="商品详情的评论列表"></a>商品详情的评论列表</h2><blockquote>
<p>产品评论列表【产品id】<br>/impcomment/list/{productId}?pageSize=10&amp;pageNow=1</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u529F_u80FD_u5546_u54C1_u641C_u7D22_u53C2_u6570"><a href="#u529F_u80FD_u5546_u54C1_u641C_u7D22_u53C2_u6570" class="headerlink" title]]>
    </summary>
    
      <category term="V币商城" scheme="http://yoursite.com/tags/V%E5%B8%81%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2016/07/13/hello-world/"/>
    <id>http://yoursite.com/2016/07/13/hello-world/</id>
    <published>2016-07-13T08:56:28.000Z</published>
    <updated>2015-12-18T02:54:46.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start"><a href="#Quick_Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos安装Nodejs]]></title>
    <link href="http://yoursite.com/2016/03/07/Centos%E5%AE%89%E8%A3%85Nodejs/"/>
    <id>http://yoursite.com/2016/03/07/Centos安装Nodejs/</id>
    <published>2016-03-07T02:57:28.000Z</published>
    <updated>2016-03-07T03:10:36.000Z</updated>
    <content type="html"><![CDATA[<p>安装nodejs前，先安装以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc make gcc-c++ openssl-devel wget</span><br></pre></td></tr></table></figure></p>
<p>然后下载源码安装</p>
<p>在这里选择你要下载的版本源码<a href="https://nodejs.org/dist/" target="_blank" rel="external">!https://nodejs.org/dist/</a></p>
<p>下载好源码后解压,然后安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://nodejs.org/dist/v4.<span class="number">3.2</span>/node-v4.<span class="number">3.2</span>.tar.gz</span><br><span class="line">tar -zvxf node-v4.<span class="number">3.2</span>t.tar.gz</span><br><span class="line"><span class="built_in">cd</span> node-v4.<span class="number">3.2</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>安装nodejs前，先安装以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td clas]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[html input number 移位小箭头]]></title>
    <link href="http://yoursite.com/2016/03/03/html-input-number-%E7%A7%BB%E4%BD%8D%E5%B0%8F%E7%AE%AD%E5%A4%B4/"/>
    <id>http://yoursite.com/2016/03/03/html-input-number-移位小箭头/</id>
    <published>2016-03-03T03:29:17.000Z</published>
    <updated>2016-03-03T03:31:23.000Z</updated>
    <content type="html"><![CDATA[<p>我们在手机端开发的时候，一些input类型会带一些小的图标，</p>
<p>隐藏input=’number’的小箭头，添加一个伪类<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="pseudo">::-webkit-inner-spin-button</span><span class="rules">&#123; </span><br><span class="line">	<span class="rule"><span class="attribute">visibility</span>:<span class="value">hidden </span><br><span class="line"></span></span></span>&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们在手机端开发的时候，一些input类型会带一些小的图标，</p>
<p>隐藏input=’number’的小箭头，添加一个伪类<br><figure class="highlight css"><table><tr><td class="gutter"><pre><sp]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[掌握Node.js的文件系统[File System 基础]]]></title>
    <link href="http://yoursite.com/2016/01/18/%E6%8E%8C%E6%8F%A1Node-js%E7%9A%84%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-File-System-%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/01/18/掌握Node-js的文件系统-File-System-基础/</id>
    <published>2016-01-18T01:20:01.000Z</published>
    <updated>2017-02-16T05:12:15.000Z</updated>
    <content type="html"><![CDATA[<p>Node最引以为傲的就是它有一个非常小的核心，有一些语言绑定了完整的POSIX API,而Node实现了尽可能少的绑定，并通过同步，异步或流API形式暴露他们。</p>
<p>这种方法意味着，操作系统中有一些非常方便的功能，需要在Node中重建。这是一个教你如何使用文件系统软件包的实用教程。</p>
<a id="more"></a>
<p>Node最引以为傲的就是它有一个非常小的核心，有一些语言绑定了完整的POSIX API,而Node实现了尽可能少的绑定，并通过同步，异步或流API形式暴露他们。</p>
<p>这种方法意味着，操作系统中有一些非常方便的功能，需要在Node中重建。这是一个教你如何使用文件系统软件包的实用教程。</p>
<h1 id="u5F15_u7528_u6587_u4EF6"><a href="#u5F15_u7528_u6587_u4EF6" class="headerlink" title="引用文件"></a>引用文件</h1><p>与文件系统的交互很重要的一点是要指向正确的文件。由于NPM的包使用相对路径引用，所以你不能把路径写死在代码。有两个主要方式来以确保包能引用到正确的文件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//使用'path.join()'而不是'+'确保Windows也能正常工作</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找到基于调用点的相对路径，对于命令行程序(CLI applications)非常实用</span></span><br><span class="line">path.join(process.cwd(),<span class="string">'my-dynamic-file'</span>);</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">path.resolve(<span class="string">'my-dynamic-file'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基于一个文件找到别一个文件</span></span><br><span class="line">path.join(__dirname,<span class="string">'my-dynamic-file'</span>)</span><br></pre></td></tr></table></figure>
<h1 id="u8BFB_u53D6_u6587_u4EF6"><a href="#u8BFB_u53D6_u6587_u4EF6" class="headerlink" title="读取文件"></a>读取文件</h1><p>在节点中的异步读取文件是最简单方法就是使用流！下面是一个例子：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> fs   = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line">fs.createReadStream(path.join(__dirname,<span class="string">'my-file'</span>))</span><br><span class="line">.pipe(process.stdout);</span><br></pre></td></tr></table></figure>
<h1 id="u521B_u5EFA_u6587_u4EF6"><a href="#u521B_u5EFA_u6587_u4EF6" class="headerlink" title="创建文件"></a>创建文件</h1><p>创建文件也并不是很难，这时在有一个用node实现的cat命令</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line">fs.createReadStream(path.join(__dirname,<span class="string">'my-file'</span>))</span><br><span class="line">.pipe(fs.createWriteStream(path.join(__dirname,<span class="string">'my-other-file'</span>)))</span><br></pre></td></tr></table></figure>
<h1 id="u5220_u9664_u6587_u4EF6"><a href="#u5220_u9664_u6587_u4EF6" class="headerlink" title="删除文件"></a>删除文件</h1><p>要Shell脚本中删除的文件和目录通常使用 rm -rf命令。NodeJS中有一个的rimraf也实现了相同的功能</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> rimraf = <span class="built_in">require</span>(<span class="string">'rimraf'</span>);</span><br><span class="line"><span class="keyword">const</span> path   = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line">rimraf(path.join(__dirname,<span class="string">'./my-directory'</span>),err =&gt; &#123;</span><br><span class="line">	<span class="keyword">if</span>(err) <span class="keyword">throw</span> err</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h1 id="u521B_u5EFA_u76EE_u5F55"><a href="#u521B_u5EFA_u76EE_u5F55" class="headerlink" title="创建目录"></a>创建目录</h1><p>创建跟删除文件很相似，使用mkdirp包</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> mkdirp = <span class="built_in">require</span>(<span class="string">'mkdirp'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line">mkdirp(path.join(__dirname,<span class="string">'foo/bar'</span>),err=&gt;&#123;</span><br><span class="line">	<span class="keyword">if</span>(err) <span class="keyword">throw</span> err</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h1 id="u67E5_u627E_u6587_u4EF6"><a href="#u67E5_u627E_u6587_u4EF6" class="headerlink" title="查找文件"></a>查找文件</h1><p>使用readdirp查找当前目录下的文件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> readdirp = <span class="built_in">require</span>(<span class="string">'readdirp'</span>);</span><br><span class="line"><span class="keyword">const</span> json = <span class="built_in">require</span>(<span class="string">'JSONStream'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// recursively print out all files in all subdirectories</span></span><br><span class="line"><span class="comment">// to the command line. The object stream must be</span></span><br><span class="line"><span class="comment">// stringified before being passed to `stdout`.</span></span><br><span class="line">readdirp(&#123;root:path.join(__dirname)&#125;)</span><br><span class="line">	.pipe(json.stringify())</span><br><span class="line">	.pipe(process.stdout)</span><br></pre></td></tr></table></figure>
<p>使用findup查找当前父级目录中的文件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> findup = <span class="built_in">require</span>(<span class="string">'findup'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// recurse up all files relative to __dirname and find</span></span><br><span class="line"><span class="comment">// all `package.json` files.</span></span><br><span class="line">findup(path.join(__dirname),<span class="string">'package.json'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,res</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'dir is:'</span> + res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>注* 稳健性</p>
<p>虽然我从来没有用过，但我听说有个 <a href="https://node-graceful-fs" target="_blank" rel="external">node-graceful-fs</a>的包也很不错。它有重试，队列和其他一些好东西。</p>
<p>注* 关于管道(pipes)</p>
<p>在管道中对整个数据流的错误进行一次处理非常。而不用对每个单独的数据流使用 .on(‘error’, cb) :</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> pump = <span class="built_in">require</span>(<span class="string">'pump'</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// oh no,no errors add handled!</span></span><br><span class="line">fs.createReadStream(<span class="string">'./in.file'</span>).pipe(fs.createWriteStream(<span class="string">'./out.file'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// that`s better,we`re handing errors now</span></span><br><span class="line"><span class="keyword">const</span> rs = fs.creatsReadStream(<span class="string">'./in.file'</span>);</span><br><span class="line"><span class="keyword">const</span> ws = fs.creatsWriteStream(<span class="string">'./out.file'</span>);</span><br><span class="line">pump(rs,ws,err=&gt;&#123;</span><br><span class="line">	<span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><a href="http://ourjs.com/detail/56162a63e3312b046d27f53e" target="_blank" rel="external">转载自</a>;</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Node最引以为傲的就是它有一个非常小的核心，有一些语言绑定了完整的POSIX API,而Node实现了尽可能少的绑定，并通过同步，异步或流API形式暴露他们。</p>
<p>这种方法意味着，操作系统中有一些非常方便的功能，需要在Node中重建。这是一个教你如何使用文件系统软件包的实用教程。</p>]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac的nginx安装和配置]]></title>
    <link href="http://yoursite.com/2016/01/17/mac%E7%9A%84nginx%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2016/01/17/mac的nginx安装和配置/</id>
    <published>2016-01-17T09:27:46.000Z</published>
    <updated>2016-03-04T02:19:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="mac_u4E2D_u4F7F_u7528homebrew_u5B89_u88C5nginx"><a href="#mac_u4E2D_u4F7F_u7528homebrew_u5B89_u88C5nginx" class="headerlink" title="mac中使用homebrew安装nginx"></a>mac中使用homebrew安装nginx</h1><p>先用命令安装 homebrew<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/<span class="built_in">local</span> --strip <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>安装好brew后在安装nginx</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo brew install nginx&#10;==&#62; Installing dependencies for nginx: pcre, openssl&#10;==&#62; Installing nginx dependency: pcre&#10;==&#62; Downloading https://homebrew.bintray.com/bottles/pcre-8.38.el_capitan.bottle.tar.gz</span><br></pre></td></tr></table></figure>
<p>安装nginx前，要先安装 pcre,openssl，<br>这个过程十几分钟，耐心等待</p>
<p>安装好后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Docroot is: /usr/<span class="built_in">local</span>/var/www</span><br><span class="line"></span><br><span class="line">The default port has been <span class="built_in">set</span> <span class="keyword">in</span> /usr/<span class="built_in">local</span>/etc/nginx/nginx.conf to <span class="number">8080</span> so that</span><br><span class="line">nginx can run without sudo.</span><br><span class="line"></span><br><span class="line">nginx will load all files <span class="keyword">in</span> /usr/<span class="built_in">local</span>/etc/nginx/servers/.</span><br><span class="line"></span><br><span class="line">To have launchd start nginx at login:</span><br><span class="line">  ln -sfv /usr/<span class="built_in">local</span>/opt/nginx/*.plist ~/Library/LaunchAgents</span><br><span class="line">Then to load nginx now:</span><br><span class="line">  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need launchctl, you can just run:</span><br><span class="line">  nginx</span></span><br></pre></td></tr></table></figure></p>
<p>安装好后nginx.conf的配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/etc/nginx</span><br></pre></td></tr></table></figure></p>
<p>常用命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx <span class="operator">-s</span> stop // 停止</span><br><span class="line">sudo nginx <span class="operator">-s</span> reload // 重启</span><br><span class="line">sudo nginx // 启动</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="mac_u4E2D_u4F7F_u7528homebrew_u5B89_u88C5nginx"><a href="#mac_u4E2D_u4F7F_u7528homebrew_u5B89_u88C5nginx" class="headerlink" title="]]>
    </summary>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ES6中isMounted()不支持，如何判断组件是否存在]]></title>
    <link href="http://yoursite.com/2016/01/08/ES6%E4%B8%ADisMounted-%E4%B8%8D%E6%94%AF%E6%8C%81%EF%BC%8C%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E7%BB%84%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/"/>
    <id>http://yoursite.com/2016/01/08/ES6中isMounted-不支持，如何判断组件是否存在/</id>
    <published>2016-01-08T02:44:10.000Z</published>
    <updated>2016-01-08T07:05:58.000Z</updated>
    <content type="html"><![CDATA[<p>先上代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//app.js</span></span><br><span class="line">render((</span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="title">Router</span> <span class="attribute">history</span>=<span class="value">&#123;browserHistory&#125;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">Route</span> <span class="attribute">path</span>=<span class="value">'/main'</span> <span class="attribute">component</span>=<span class="value">&#123;</span> <span class="attribute">MainMenu</span> &#125;&gt;</span><span class="tag">&lt;/<span class="title">Route</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">Route</span> <span class="attribute">path</span>=<span class="value">"/hot"</span> <span class="attribute">component</span>=<span class="value">&#123;</span> <span class="attribute">HotComponent</span> &#125;&gt;</span><span class="tag">&lt;/<span class="title">Route</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">Router</span>&gt;</span></span><br><span class="line">)</span>,<span class="built_in">document</span>.getElementById(<span class="string">'container'</span>))</span><br></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MainMenu.js</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainMenu</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	constructor(props)&#123;</span><br><span class="line">		<span class="keyword">super</span>(props)</span><br><span class="line">		<span class="keyword">this</span>.state = &#123;</span><br><span class="line">			list : [GoodsStore.CategoryList],</span><br><span class="line">			categoryIndex : GoodsStore.categoryIndex</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	componentDidMount()&#123;</span><br><span class="line">		GoodsStore.addChangeCategory(<span class="keyword">this</span>.changeCategory.bind(<span class="keyword">this</span>));</span><br><span class="line">		GoodsStore.getCategoryList();</span><br><span class="line">	&#125;</span><br><span class="line">	componentWillUnmount()&#123;</span><br><span class="line">		GoodsStore.removeChangeCategory(<span class="keyword">this</span>.changeCategory.bind(<span class="keyword">this</span>))</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	changeCategory()&#123;</span><br><span class="line">		<span class="keyword">this</span>.setState(&#123;</span><br><span class="line">			categoryIndex:GoodsStore.categoryIndex</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	handleClick(index,e)&#123;</span><br><span class="line">		GoodsAction.changeCategory(index);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	render()&#123;</span><br><span class="line">		<span class="keyword">let</span> list = <span class="keyword">this</span>.state.list;</span><br><span class="line">		<span class="keyword">let</span> categoryIndex = <span class="keyword">this</span>.state.categoryIndex;</span><br><span class="line">		list = list.map((items,i)=&gt;&#123;</span><br><span class="line">			<span class="keyword">let</span> &#123; name, categoryId &#125; = items</span><br><span class="line">			<span class="keyword">let</span> active = categoryIndex == i ? <span class="string">'active'</span> : <span class="string">''</span>;</span><br><span class="line">			<span class="keyword">return</span>(</span><br><span class="line">				<span class="xml"><span class="tag">&lt;<span class="title">li</span> <span class="attribute">key</span>=<span class="value">&#123;i&#125;</span> <span class="attribute">className</span>=<span class="value">&#123;active&#125;</span> <span class="attribute">onClick</span>=<span class="value">&#123;</span> <span class="attribute">this.handleClick.bind</span>(<span class="attribute">this</span>,<span class="attribute">i</span>) &#125;&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="title">a</span>&gt;</span>&#123; name &#125;<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">			)</span></span><br><span class="line">		&#125;)</span><br><span class="line">		<span class="keyword">return</span>(</span><br><span class="line">			<span class="xml"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">div</span> <span class="attribute">className</span>=<span class="value">"main-classes-list"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="title">div</span> <span class="attribute">className</span>=<span class="value">"main-left"</span> <span class="attribute">id</span>=<span class="value">'main-left'</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">'scroller'</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="title">ul</span> <span class="attribute">className</span>=<span class="value">"main-left-ul"</span>&gt;</span></span><br><span class="line">								&#123; list &#125;</span><br><span class="line">							<span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">		)</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其它部分上传到<a href="https://github.com/runlijs/react-flux-demo" target="_blank" rel="external">github</a>上</p>
<p>当路由在/main和/hot之间切换的时候，MainMenu组件会报如下错误 </p>
<blockquote>
<p>Warning: setState(…): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the undefined component.</p>
</blockquote>
<p>上面的代码中，由于ES6不支持自动绑定，所以需要使用.bind(this)，这就造成了add 和 remove事件监听的时候，上下两个 changeCategory 函数返回了两个不同的函数对象。</p>
<p>于是组件销毁时GoodsStore.removeChangeCategory方法还是监听了change事件，没有移除事件成功。<br>于时在组件在次创建时，GoodsStore.addChangeCategory方法监听的change事件触发 ，但是component组件的状态还是unmounted，所以这时不会出现以上错误 ，</p>
<p>这时我们就需要使用isMounted()来判断一下组件是否存在，<br>但是isMounted()方法在ES6中暂时还不支持，</p>
<p>这时我们就需要在.bind(this)上做手脚，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">constructor(props)&#123;</span><br><span class="line">	<span class="keyword">super</span>(props)</span><br><span class="line">	<span class="keyword">this</span>.state = &#123;</span><br><span class="line">		list : [GoodsStore.CategoryList],</span><br><span class="line">		categoryIndex : GoodsStore.categoryIndex</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">this</span>.changeCategory = <span class="keyword">this</span>.changeCategory.bind(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line">componentDidMount()&#123;</span><br><span class="line">	GoodsStore.addChangeCategory(<span class="keyword">this</span>.changeCategory);</span><br><span class="line">	GoodsStore.getCategoryList();</span><br><span class="line">&#125;</span><br><span class="line">componentWillUnmount()&#123;</span><br><span class="line">	GoodsStore.removeChangeCategory(<span class="keyword">this</span>.changeCategory)</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样我们就可以解决这个问题了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>先上代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span]]>
    </summary>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
</feed>
